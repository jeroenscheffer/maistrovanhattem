# This file was generated by the `rails generate rspec:install` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# The generated `.rspec` file contains `--require spec_helper` which will cause
# this file to always be loaded, without a need to explicitly require it in any
# files.
#
# Given that it is always loaded, you are encouraged to keep this file as
# light-weight as possible. Requiring heavyweight dependencies from this file
# will add to the boot time of your test suite on EVERY test run, even for an
# individual file that may not need all of that loaded. Instead, consider making
# a separate helper file that requires the additional dependencies and performs
# the additional setup, and require it from the spec files that actually need
# it.
#
# The `.rspec` file also contains a few flags that are not defaults but that
# users commonly want.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration

ENV["RAILS_ENV"] ||= 'test'
require File.expand_path("../../config/environment", __FILE__)
require 'rspec/rails'
require 'simplecov'

RSpec.configure do |config|
  # rspec-expectations config goes here. You can use an alternate
  # assertion/expectation library such as wrong or the stdlib/minitest
  # assertions if you prefer.
  config.expect_with :rspec do |expectations|
    # This option will default to `true` in RSpec 4. It makes the `description`
    # and `failure_message` of custom matchers include text for helper methods
    # defined using `chain`, e.g.:
    #     be_bigger_than(2).and_smaller_than(4).description
    #     # => "be bigger than 2 and smaller than 4"
    # ...rather than:
    #     # => "be bigger than 2"
    expectations.include_chain_clauses_in_custom_matcher_descriptions = true
  end

  # rspec-mocks config goes here. You can use an alternate test double
  # library (such as bogus or mocha) by changing the `mock_with` option here.
  config.mock_with :rspec do |mocks|
    # Prevents you from mocking or stubbing a method that does not exist on
    # a real object. This is generally recommended, and will default to
    # `true` in RSpec 4.
    mocks.verify_partial_doubles = true
  end

# The settings below are suggested to provide a good initial experience
# with RSpec, but feel free to customize to your heart's content.
=begin
  # These two settings work together to allow you to limit a spec run
  # to individual examples or groups you care about by tagging them with
  # `:focus` metadata. When nothing is tagged with `:focus`, all examples
  # get run.
  config.filter_run :focus
  config.run_all_when_everything_filtered = true

  # Allows RSpec to persist some state between runs in order to support
  # the `--only-failures` and `--next-failure` CLI options. We recommend
  # you configure your source control system to ignore this file.
  config.example_status_persistence_file_path = "spec/examples.txt"

  # Limits the available syntax to the non-monkey patched syntax that is
  # recommended. For more details, see:
  #   - http://myronmars.to/n/dev-blog/2012/06/rspecs-new-expectation-syntax
  #   - http://www.teaisaweso.me/blog/2013/05/27/rspecs-new-message-expectation-syntax/
  #   - http://myronmars.to/n/dev-blog/2014/05/notable-changes-in-rspec-3#new__config_option_to_disable_rspeccore_monkey_patching
  config.disable_monkey_patching!

  # Many RSpec users commonly either run the entire suite or an individual
  # file, and it's useful to allow more verbose output when running an
  # individual spec file.
  if config.files_to_run.one?
    # Use the documentation formatter for detailed output,
    # unless a formatter has already been configured
    # (e.g. via a command-line flag).
    config.default_formatter = 'doc'
  end

  # Print the 10 slowest examples and example groups at the
  # end of the spec run, to help surface which specs are running
  # particularly slow.
  config.profile_examples = 10

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = :random

  # Seed global randomization in this process using the `--seed` CLI option.
  # Setting this allows you to use `--seed` to deterministically reproduce
  # test failures related to randomization by passing the same `--seed` value
  # as the one that triggered the failure.
  Kernel.srand config.seed
=end
end

# class ActiveSupport::TestCase
#
#   VCR.configure do |config|
#     config.cassette_library_dir = "spec/cassettes"
#     config.hook_into :webmock
#   end
#
#   def stub_leaderboard
#     {
#       leaderboard: {
#         members: [
#           {
#             id: 1,
#             name: "Toby Reschke",
#             atname: "toby",
#             avatar: {
#               avatar: {
#                 url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/1/Toby_20FACE.jpg",
#                 small: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/1/small_Toby_20FACE.jpg"
#                 },
#                 default: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/1/default_Toby_20FACE.jpg"
#                 },
#                 medium: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/1/medium_Toby_20FACE.jpg"
#                 },
#                 large: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/1/large_Toby_20FACE.jpg"
#                 },
#                 high_def: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/1/high_def_Toby_20FACE.jpg"
#                 }
#               }
#             },
#             ratings_average: 5
#           },
#           {
#             id: 6,
#             name: "Greg Hanson",
#             atname: "greg",
#             avatar: {
#               avatar: {
#                 url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/6/Greg.png",
#                 small: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/6/small_Greg.png"
#                 },
#                 default: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/6/default_Greg.png"
#                 },
#                 medium: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/6/medium_Greg.png"
#                 },
#                 large: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/6/large_Greg.png"
#                 },
#                 high_def: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/6/high_def_Greg.png"
#                 }
#               }
#             },
#             ratings_average: 5
#           },
#           {
#             id: 5,
#             name: "Kaitlin Bermel",
#             atname: "kaitlin",
#             avatar: {
#               avatar: {
#                 url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/5/Kaitlin-edited.png",
#                 small: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/5/small_Kaitlin-edited.png"
#                 },
#                 default: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/5/default_Kaitlin-edited.png"
#                 },
#                 medium: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/5/medium_Kaitlin-edited.png"
#                 },
#                 large: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/5/large_Kaitlin-edited.png"
#                 },
#                 high_def: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/5/high_def_Kaitlin-edited.png"
#                 }
#               }
#             },
#             ratings_average: 5
#           },
#           {
#             id: 8,
#             name: "Antonio Ayala",
#             atname: "antonio",
#             avatar: {
#               avatar: {
#                 url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/8/Anton_20_2_.png",
#                 small: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/8/small_Anton_20_2_.png"
#                 },
#                 default: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/8/default_Anton_20_2_.png"
#                 },
#                 medium: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/8/medium_Anton_20_2_.png"
#                 },
#                 large: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/8/large_Anton_20_2_.png"
#                 },
#                 high_def: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/8/high_def_Anton_20_2_.png"
#                 }
#               }
#             },
#             ratings_average: 4.933333333333334
#           },
#           {
#             id: 2,
#             name: "Christopher Stjernholm",
#             atname: "christopher",
#             avatar: {
#               avatar: {
#                 url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/2/Christopher.png",
#                 small: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/2/small_Christopher.png"
#                 },
#                 default: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/2/default_Christopher.png"
#                 },
#                 medium: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/2/medium_Christopher.png"
#                 },
#                 large: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/2/large_Christopher.png"
#                 },
#                 high_def: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/2/high_def_Christopher.png"
#                 }
#               }
#             },
#             ratings_average: 4.814814814814815
#           },
#           {
#             id: 4,
#             name: "Travis Barton",
#             atname: "travis",
#             avatar: {
#               avatar: {
#                 url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/4/download.png",
#                 small: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/4/small_download.png"
#                 },
#                 default: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/4/default_download.png"
#                 },
#                 medium: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/4/medium_download.png"
#                 },
#                 large: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/4/large_download.png"
#                 },
#                 high_def: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/4/high_def_download.png"
#                 }
#               }
#             },
#             ratings_average: 4.75
#           },
#           {
#             id: 12,
#             name: "Karen Jacobson",
#             atname: "karen",
#             avatar: {
#               avatar: {
#                 url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/12/Karen_20_1_.png",
#                 small: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/12/small_Karen_20_1_.png"
#                 },
#                 default: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/12/default_Karen_20_1_.png"
#                 },
#                 medium: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/12/medium_Karen_20_1_.png"
#                 },
#                 large: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/12/large_Karen_20_1_.png"
#                 },
#                 high_def: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/12/high_def_Karen_20_1_.png"
#                 }
#               }
#             },
#             ratings_average: 4.75
#           },
#           {
#             id: 11,
#             name: "Dave",
#             atname: "dave",
#             avatar: {
#               avatar: {
#                 url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/11/Color_20Headshot.jpg",
#                 small: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/11/small_Color_20Headshot.jpg"
#                 },
#                 default: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/11/default_Color_20Headshot.jpg"
#                 },
#                 medium: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/11/medium_Color_20Headshot.jpg"
#                 },
#                 large: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/11/large_Color_20Headshot.jpg"
#                 },
#                 high_def: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/11/high_def_Color_20Headshot.jpg"
#                 }
#               }
#             },
#             ratings_average: 4.5
#           },
#           {
#             id: 26,
#             name: "Steven James",
#             atname: "steven",
#             avatar: {
#               avatar: {
#                 url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/26/Headshot.png",
#                 small: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/26/small_Headshot.png"
#                 },
#                 default: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/26/default_Headshot.png"
#                 },
#                 medium: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/26/medium_Headshot.png"
#                 },
#                 large: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/26/large_Headshot.png"
#                 },
#                 high_def: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/26/high_def_Headshot.png"
#                 }
#               }
#             },
#             ratings_average: 4
#           },
#           {
#             id: 52,
#             name: "Joel White",
#             atname: "joel",
#             avatar: {
#               avatar: {
#                 url: "https://s3.amazonaws.com/trelorawebassets/v2/avatar-default.png",
#                 small: {
#                   url: "https://s3.amazonaws.com/trelorawebassets/v2/avatar-default.png"
#                 },
#                 default: {
#                   url: "https://s3.amazonaws.com/trelorawebassets/v2/avatar-default.png"
#                 },
#                 medium: {
#                   url: "https://s3.amazonaws.com/trelorawebassets/v2/avatar-default.png"
#                 },
#                 large: {
#                   url: "https://s3.amazonaws.com/trelorawebassets/v2/avatar-default.png"
#                 },
#                 high_def: {
#                   url: "https://s3.amazonaws.com/trelorawebassets/v2/avatar-default.png"
#                 }
#               }
#             },
#             ratings_average: -1
#           },
#           {
#             id: 21,
#             name: "Eileen",
#             atname: "eileen",
#             avatar: {
#               avatar: {
#                 url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/21/eileen_bus_image_20_2_.png",
#                 small: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/21/small_eileen_bus_image_20_2_.png"
#                 },
#                 default: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/21/default_eileen_bus_image_20_2_.png"
#                 },
#                 medium: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/21/medium_eileen_bus_image_20_2_.png"
#                 },
#                 large: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/21/large_eileen_bus_image_20_2_.png"
#                 },
#                 high_def: {
#                   url: "https://mytrelora-production.s3.amazonaws.com/members/avatar/21/high_def_eileen_bus_image_20_2_.png"
#                 }
#               }
#             },
#             ratings_average: -1
#           }
#         ]
#       }
#     }
#   end
# end

# class ActionDispatch::IntegrationTest
#   include Capybara::DSL
#
#   def stub_omniauth
#     OmniAuth.config.test_mode = true
#     OmniAuth.config.mock_auth[:instagram] = OmniAuth::AuthHash.new({
#       "provider"=>"instagram",
#       "uid"=>"2331596714",
#       "info"=>{
#         "nickname"=>"aaronturing",
#         "name"=>"Aaron",
#         "email"=>nil,
#         "image"=>"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-19/s150x150/12338859_189639354716935_1184283222_a.jpg",
#         "bio"=>"Turing test",
#         "website"=>""},
#       "credentials"=>{"token"=>"2331596714.2dd2c36.bd9e537a6ecc4b6ea85b0cc9f22a5779", "expires"=>false},
#       "extra"=>{
#         "raw_info"=>{
#           "username"=>"aaronturing",
#           "bio"=>"Turing test",
#           "website"=>"",
#           "profile_picture"=>"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-19/s150x150/12338859_189639354716935_1184283222_a.jpg",
#           "full_name"=>"Aaron",
#           "id"=>"2331596714"
#           }}})
#   end
# end
